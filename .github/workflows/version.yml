name: Oasislmf Set Version 

on:
  push:
  workflow_dispatch:
    inputs:
      ktools_version:
        description: 'Update the ktools version, semvar (without the "v") For ktools release v3.0.0 input [3.0.0, 3.0.0rc1] '
        required: false
        default: ""
      oasislmf_version:
        description: 'Update the package version, semvar, input "{n}.{n}.{n}" or for pre-release "{n}.{n}.{n}rc{n}" [3.0.0, 3.0.0rc1]  '
        required: false
        default: ""

  workflow_call:
    inputs:
      ktools_version:
        description: 'Update the ktools version'
        required: false
        default: ""
        type: string
      oasislmf_version:
        description: 'Update the package version'
        required: false
        default: ""
        type: string

env:
  ktools_file: 'setup.py'
  ktools_regex: '^KTOOLS_VERSION'

  oasislmf_file: 'oasislmf/__init__.py'
  oasislmf_regex: '^__version__'

  # TESTING WRITE VERSIONS
  ktools_version: '4.0.0'
  oasislmf_version: '9.9.9rc9'
  

jobs:
  version:
    runs-on: ubuntu-latest
    steps:

    - name: Check input is valid semvar (Ktools)
      if: env.ktools_version != ''
      run: |
        VALID=$(echo ${{ env.ktools_version }} | grep -oPc "^(\d+)\.(\d+)\.(\d+)rc(\d+)|(\d+)\.(\d+)\.(\d+)$")
        [[ $VALID = 1 ]] || exit 1

    - name: Check input is valid semvar (Oasislmf)
      if: env.oasislmf_version != ''
      run: |
        VALID=$(echo ${{ env.ktools_version }} | grep -oPc "^(\d+)\.(\d+)\.(\d+)rc(\d+)|(\d+)\.(\d+)\.(\d+)$")
        [[ $VALID = 1 ]] || exit 1

    - name: Checkout
      if: env.ktools_version != '' ||  env.oasislmf_version != ''
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # fetch the whole repo for complete history

    - name: Setup github user
      if: env.ktools_version != '' ||  env.oasislmf_version != ''
      run: |
        git config --global user.email ${{ env.GIT_EMAIL }}
        git config --global user.name ${{ env.GIT_USERNAME }}
        git config --global pull.ff only

    - name: Write ktools version 
      if: env.ktools_version != ''
      run: |
        CURRENT_VER=$(grep ${{ env.ktools_regex }} ${{ env.ktools_file }} | awk -F"'" '{print $2}')
        sed -i 's|'$CURRENT_VER'|'${{ env.ktools_version }}'|g' ${{ env.ktools_file }}
        git add ${{ env.ktools_file }}
        git commit -m "Set Ktools to version ${{ env.ktools_version }}"

    - name: Write oasislmf version 
      if: env.oasislmf_version != ''
      run: |
        CURRENT_VER=$(grep ${{ env.oasislmf_regex }} ${{ env.oasislmf_file }} | awk -F"'" '{print $2}')
        sed -i 's|'$CURRENT_VER'|'${{ env.oasislmf_version }}'|g' ${{ env.oasislmf_file }}
        git add ${{ env.oasislmf_file }}
        git commit -m "Set oasislmf to version ${{ env.oasislmf_version }}"

    - name: Push  
      if: env.ktools_version != '' ||  env.oasislmf_version != ''
      run: git push 
