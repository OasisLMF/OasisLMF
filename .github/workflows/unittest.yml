name: Oasislmf Testing

on:
  push:
  workflow_dispatch:
    inputs:
      ktools_branch:
        description: 'If set, build ktools from scratch and use output to build package: [BranchName]'
        required: false
        default: "develop"

jobs:
  build:
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      ktools_branch: ${{ inputs.ktools_branch }}

  unittest:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        cfg:
        - { python-version: '3.7', pkg-version: ""}
        - { python-version: '3.8', pkg-version: ""}
        - { python-version: '3.9', pkg-version: ""}
        - { python-version: '3.10', pkg-version: ""}
        - { python-version: '3.10', pkg-version: 'numba==0.55.1' }

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.cfg.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.cfg.python-version }}

      - name: Download package
        uses: actions/download-artifact@v3
        with:
          name: oasislmf-bin-pkg_linux
          path: ${{ github.workspace }}/

      - name: Install package
        run: |
          pip install ${{ needs.build.outputs.linux_pkg_filename }}

      - name: Install pip-tools
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools

      - name: Pip Compile
        run: |
          rm -f requirements.txt
          if [ -z "${{ matrix.cfg.pkg-version }}" ]; then
            pip-compile requirements.in -o requirements.txt
          else
            pip-compile --upgrade-package "${{ matrix.cfg.pkg-version }}" requirements.in -o requirements.txt
          fi
          pip install -r requirements.txt
      - name: Run tox
        run: tox -e py
