# Workflow to run the package unit tests on multiple python versions (CI)
#
#  inputs:
#    ktools_branch: If set, build ktools from scratch and use output to build package
#                   These new ktools binaries, will be used when testing the oasislmf
#                   instead of the pinned ktools version

name: Oasislmf Testing

on:
  pull_request:
  push:
    branches:
      - main
      - stable**
  workflow_dispatch:
    inputs:
      ktools_branch:
        description: "Build Ktools before tests: [git ref]"
        required: false

      ods_branch:
        description: "Git install ods_tools branch before tests: [git ref]"
        required: false

jobs:
  build:
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      ktools_branch: ${{ inputs.ktools_branch }}

  ods_tools:
    if: ${{ inputs.ods_branch != '' || github.event_name != 'workflow_dispatch' }}
    uses: OasisLMF/ODS_Tools/.github/workflows/build.yml@main
    secrets: inherit
    with:
      ods_branch: ${{ github.event_name != 'workflow_dispatch' && 'main' ||  inputs.ods_branch }} # Enable 'ods-tools' build by default

  unittest:
    if: ${{ ! failure() || ! cancelled() }}
    runs-on: ubuntu-latest
    needs: [build, ods_tools]
    strategy:
      matrix:
        cfg:
          - { python-version: "3.8", pkg-version: "", upload-cov: false }
          - { python-version: "3.9", pkg-version: "", upload-cov: false }
          - { python-version: "3.10", pkg-version: "", upload-cov: false }
          - { python-version: "3.11", pkg-version: "", upload-cov: false }
          - { python-version: "3.11", pkg-version: "", upload-cov: true }

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.cfg.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.cfg.python-version }}

      - name: Install pip-tools
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools

      - name: Set pip resolver flag
        if: matrix.cfg.python-version == 3.7
        run: |
          echo "PIP_RESOLVER=--resolver=backtracking" >> $GITHUB_ENV
      - name: Pip Compile
        run: |
          rm -f requirements.txt
          if [ -z "${{ matrix.cfg.pkg-version }}" ]; then
            pip-compile requirements.in -o requirements.txt ${PIP_RESOLVER}
          else
            pip-compile --upgrade-package "${{ matrix.cfg.pkg-version }}" requirements.in -o requirements.txt ${PIP_RESOLVER}
          fi
          pip install -r requirements.txt

      - name: Download package
        if: matrix.cfg.upload-cov != true
        uses: actions/download-artifact@v3
        with:
          name: oasislmf-bin-pkg_linux
          path: ${{ github.workspace }}/

      - name: Install Package (From Package)
        if: matrix.cfg.upload-cov != true
        run: |
          pip install ${{ needs.build.outputs.linux_pkg_filename }}

      - name: Install Oasislmf (Editable mode)
        if: matrix.cfg.upload-cov == true
        run: |
          pip install -v -e .

      - name: download ods_tools
        if: needs.ods_tools.outputs.whl_filename != ''
        uses: actions/download-artifact@v3
        with:
          name: bin_package
          path: ${{ github.workspace }}/

      - name: install ods_tools
        if: needs.ods_tools.outputs.whl_filename != ''
        run: |
          pip uninstall ods_tools -y
          pip install ${{ needs.ods_tools.outputs.whl_filename }}

      - name: run pytest (JIT enabled)
        if: matrix.cfg.upload-cov != true
        run: pytest -p no:flaky --ignore=fm_testing_tool --ignore=validation --cov-config=tox.ini --cov=oasislmf --cov-report=xml --cov-report=term

      - name: run pytest (JIT disabled)
        if: matrix.cfg.upload-cov == true
        run: pytest -p no:flaky --ignore=fm_testing_tool --ignore=validation --cov-config=tox.ini --cov=oasislmf --cov-report=xml --cov-report=term --gul-rtol 1e-3 --gul-atol 1e-3
        env:
          NUMBA_DISABLE_JIT: 1

      - name: Upload coverage to Codecov
        if: matrix.cfg.upload-cov == true
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
