name: Build package


on:
  push:
  workflow_dispatch:
    inputs:
      ktools_branch:
        description: 'If set, build ktools from scratch and use output to build package: [BranchName]'
        required: false
        default: ""


env:
  KTOOLS_BRANCH: 'hotfix/github-actions'

jobs:
  ktools:
    #if: env.KTOOLS_BRANCH != ''
    uses:  OasisLMF/ktools/.github/workflows/build.yml@hotfix/github-actions
    #uses:  OasisLMF/ktools/.github/workflows/build.yml@master
    secrets: inherit
    with:
      create_ktools_builder: 'false'
      ktools_branch: 'hotfix/github-actions'
      #ktools_branch: ${{ inputs.ktools_branch }}

  build:
    if: ${{ always() }}
    needs: [ktools]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - run: pip install setup-tools  

    - name: Download ktools build (Linux)
      if: env.KTOOLS_BRANCH != ''
      run: 

    - name: Download ktools build (Linux)
      uses: actions/download-artifact@v3
      with:
        name: Linux_x86_64
        path: ${{ github.workspace }}/ 

    - name: Download ktools build (Darwin)
      if: env.KTOOLS_BRANCH != ''
      uses: actions/download-artifact@v3
      with:
        name: Darwin_x86_64
        path: ${{ github.workspace }}/ 

    - name: Set local ktools tar dir
      if: env.KTOOLS_BRANCH != ''
      run: |
        echo "KTOOLS_TAR_FILE_DIR=${{ github.workspace }}" >> $GITHUB_ENV
      
    - name: Build source dist
      run: python setup.py sdist

    - name: Build binary dist (Linux)
      run: python setup.py bdist_wheel --plat-name Linux_x86_64

    - name: Build binary dist (Darwin)
      run: python setup.py bdist_wheel --plat-name Darwin_x86_64
      

    - name: GPG sign packages  
      run: echo 'placeholder'


    - name: Store packages   
      run: echo 'placeholder'

# Clone this repo

# setup python env

# build wheel

# sign package

# Store package and sig


