name: Build package


on:
  push:
  workflow_dispatch:
    inputs:
      ktools_branch:
        description: 'If set, build ktools from scratch and use output to build package: [BranchName]'
        required: false
        default: ""

  workflow_call:
    inputs:
      ktools_branch:
        description: 'If set, build ktools from scratch and use output to build package: [BranchName]'
        required: false
        default: ""
        type: string
    outputs:
      filename:
        description: "The first output string"
        value: ${{ jobs.oasislmf.outputs.pkg_filename }}

jobs:
  ktools:
    if: inputs.ktools_branch != ''
    uses:  OasisLMF/ktools/.github/workflows/build.yml@hotfix/github-actions
    #uses:  OasisLMF/ktools/.github/workflows/build.yml@master
    secrets: inherit
    with:
      create_ktools_builder: 'false'
      ktools_branch: ${{ inputs.ktools_branch }}

  oasislmf:
    if: ${{ always() }}
    needs: [ktools]
    runs-on: ubuntu-latest
    outputs:
      pkg_filename: ${{ steps.linux_whl.outputs.filename }}
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - run: pip install pip-tools

    - name: Set local ktools tar dir
      if: inputs.ktools_branch != ''
      run: |
        echo "KTOOLS_TAR_FILE_DIR=${{ github.workspace }}" >> $GITHUB_ENV

    - name: Build source dist
      run: |
        python setup.py sdist
        TAR_PKG=$(find ./dist/ -name "oasislmf-*.tar.gz")
        echo "PKG_SRC_PATH=${TAR_PKG}" >> $GITHUB_ENV

    - name: Store source dist
      uses: actions/upload-artifact@v3
      with:
        name: oasislmf-source-pkg
        path: ${{ env.PKG_SRC_PATH }}
        retention-days: 5

    - name: Download ktools build (Linux)
      if: inputs.ktools_branch != ''
      uses: actions/download-artifact@v3
      with:
        name: Linux_x86_64
        path: ${{ github.workspace }}/

    - name: Build binary dist (Linux)
      run: |
        python setup.py bdist_wheel --plat-name Linux_x86_64
        WHL_LINUX=$(find ./dist/ -name "oasislmf-*manylinux1_x86_64.whl")
        echo "PKG_LINUX_PATH=${WHL_LINUX}" >> $GITHUB_ENV

    - name: Store Linux Wheel
      uses: actions/upload-artifact@v3
      with:
        name: oasislmf-bin-pkg_linux
        path: ${{ env.PKG_LINUX_PATH }}
        retention-days: 5

    - name: Output Linux Wheel name
      id: linux_whl
      run: |
        FILENAME=$(find ./dist/ -name "oasislmf-*manylinux1_x86_64.whl" -exec basename {} \;)
        echo "filename=$FILENAME" >> $GITHUB_OUTPUT



    #- name: Download ktools build (Darwin)
    #  if: inputs.ktools_branch != ''
    #  uses: actions/download-artifact@v3
    #  with:
    #    name: Darwin_x86_64
    #    path: ${{ github.workspace }}/

    #- name: Build binary dist (Darwin)
    #  if: inputs.ktools_branch != ''
    #  run: |
    #    python setup.py bdist_wheel --plat-name Darwin_x86_64
    #    WHL_OSX=$(find ./dist/ -name "oasislmf-*macosx_10_6_intel.whl")
    #    echo "PKG_DARWIN_PATH=${WHL_OSX}" >> $GITHUB_ENV

    #- name: Store OSX Wheel
    #  uses: actions/upload-artifact@v3
    #  with:
    #    name: oasislmf-bin-pkg_darwin
    #    path: ${{ env.PKG_DARWIN_PATH }}
    #    retention-days: 5


