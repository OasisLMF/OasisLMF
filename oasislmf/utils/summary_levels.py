__all__ = [
    'SUMMARY_LEVEL_LOC',
    'SUMMARY_LEVEL_ACC',
    'OED_LOCATION_COLS',
    'OED_ACCOUNT_COLS',
    'OED_REINSINFO_COLS',
    'OED_REINSSCOPE_COLS',
]

SUMMARY_LEVEL_LOC = [
 'accnumber',
 'areacode',
 'areaname',
 'basement',
 'city',
 'condnumber',
 'condpriority',
 'constructioncode',
 'correlationgroup',
 'countrycode',
 'geogname1',
 'geogname2',
 'geogname3',
 'geogname4',
 'geogname5',
 'geogscheme1',
 'geogscheme2',
 'geogscheme3',
 'geogscheme4',
 'geogscheme5',
 'locgroup',
 'locname',
 'locnumber',
 'locperilscovered',
 'locuserdef1',
 'locuserdef2',
 'locuserdef3',
 'locuserdef4',
 'locuserdef5',
 'numberofstoreys',
 'occupancycode',
 'portnumber',
 'postalcode']

SUMMARY_LEVEL_ACC = [
 'accgroup',
 'accname',
 'accnumber',
 'accuserdef1',
 'accuserdef2',
 'accuserdef3',
 'accuserdef4',
 'accuserdef5',
 'cedantname',
 'condname',
 'condnumber',
 'lob',
 'polnumber',
 'poluserdef1',
 'poluserdef2',
 'poluserdef3',
 'poluserdef4',
 'poluserdef5',
 'portname',
 'portnumber']

OED_LOCATION_COLS = {
 'portnumber': {'desc': 'Portfolio number',
  'require_field': 'R',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'accnumber': {'desc': 'Account number',
  'require_field': 'R',
  'data_type': 'nvarchar(40)',
  'default_value': 'n/a'},
 'locnumber': {'desc': 'Location number',
  'require_field': 'R',
  'data_type': 'nvarchar(20)',
  'default_value': 'n/a'},
 'locname': {'desc': 'Location name',
  'require_field': 'O',
  'data_type': 'nvarchar(20)',
  'default_value': 'n/a'},
 'locgroup': {'desc': 'Location group name',
  'require_field': 'O',
  'data_type': 'nvarchar(20)',
  'default_value': 'n/a'},
 'correlationgroup': {'desc': 'Correlation Group: indicates which locations should be correlated between each other.',
  'require_field': 'O',
  'data_type': 'int',
  'default_value': 'n/a'},
 'isprimary': {'desc': 'Whether the location in LocGroup is the primary building in the group',
  'require_field': 'O',
  'data_type': '0 or 1',
  'default_value': '1'},
 'istenant': {'desc': 'Whether property is occupied by a tenant or not',
  'require_field': 'O',
  'data_type': '0 or 1',
  'default_value': '0'},
 'buildingid': {'desc': 'Unique building identification number',
  'require_field': 'O',
  'data_type': 'int',
  'default_value': 'n/a'},
 'locinceptiondate': {'desc': 'Location inception date - DD/MM/YYYY format',
  'require_field': 'O',
  'data_type': 'smalldatetime',
  'default_value': 'n/a'},
 'locexpirydate': {'desc': 'Location expiry date - DD/MM/YYYY format',
  'require_field': 'O',
  'data_type': 'smalldatetime',
  'default_value': 'n/a'},
 'percentcomplete': {'desc': 'Completeness percentage of the construction project at this location.',
  'require_field': 'O',
  'data_type': 'decimal',
  'default_value': '1'},
 'completiondate': {'desc': 'Construction project completion date',
  'require_field': 'O',
  'data_type': 'date',
  'default_value': 'n/a'},
 'countrycode': {'desc': 'Country code (based on ISO3166 alpha-2 codes)',
  'require_field': 'R',
  'data_type': 'char(2)',
  'default_value': 'n/a'},
 'latitude': {'desc': 'Latitude in degrees (-90.0 to +90.0)',
  'require_field': 'O',
  'data_type': 'decimal',
  'default_value': '0'},
 'longitude': {'desc': 'Longitude in degrees (-180.0 to +180.0)',
  'require_field': 'O',
  'data_type': 'decimal',
  'default_value': '0'},
 'streetaddress': {'desc': 'Street address including house number ',
  'require_field': 'O',
  'data_type': 'nvarchar(100)',
  'default_value': 'n/a'},
 'postalcode': {'desc': 'Postcode: the highest resolution postcode most often used.',
  'require_field': 'O',
  'data_type': 'nvarchar(20)',
  'default_value': 'n/a'},
 'city': {'desc': 'City',
  'require_field': 'O',
  'data_type': 'nvarchar(50)',
  'default_value': 'n/a'},
 'areacode': {'desc': 'Code representing typically the largest sub-division in a country (e.g. State code).',
  'require_field': 'O',
  'data_type': 'nvarchar(20)',
  'default_value': 'n/a'},
 'areaname': {'desc': 'Name relating to the AreaCode (e.g. State name).',
  'require_field': 'O',
  'data_type': 'nvarchar(50)',
  'default_value': 'n/a'},
 'geogscheme1': {'desc': "Geography scheme: Descriptor of the geography scheme used.",
  'require_field': 'O',
  'data_type': 'varchar(5)',
  'default_value': 'n/a'},
 'geogname1': {'desc': 'Geography name: Descriptor of the geographical area.',
  'require_field': 'O',
  'data_type': 'nvarchar(50)',
  'default_value': 'n/a'},
 'geogscheme2': {'desc': "Geography scheme: Descriptor of the geography scheme used.",
  'require_field': 'O',
  'data_type': 'varchar(5)',
  'default_value': 'n/a'},
 'geogname2': {'desc': 'Geography name: Descriptor of the geographical area.',
  'require_field': 'O',
  'data_type': 'nvarchar(50)',
  'default_value': 'n/a'},
 'geogscheme3': {'desc': "Geography scheme: Descriptor of the geography scheme used.",
  'require_field': 'O',
  'data_type': 'varchar(5)',
  'default_value': 'n/a'},
 'geogname3': {'desc': 'Geography name: Descriptor of the geographical area.',
  'require_field': 'O',
  'data_type': 'nvarchar(50)',
  'default_value': 'n/a'},
 'geogscheme4': {'desc': "Geography scheme: Descriptor of the geography scheme used.",
  'require_field': 'O',
  'data_type': 'varchar(5)',
  'default_value': 'n/a'},
 'geogname4': {'desc': 'Geography name: Descriptor of the geographical area.',
  'require_field': 'O',
  'data_type': 'nvarchar(50)',
  'default_value': 'n/a'},
 'geogscheme5': {'desc': "Geography scheme: Descriptor of the geography scheme used.",
  'require_field': 'O',
  'data_type': 'varchar(5)',
  'default_value': 'n/a'},
 'geogname5': {'desc': 'Geography name: Descriptor of the geographical area.',
  'require_field': 'O',
  'data_type': 'nvarchar(50)',
  'default_value': 'n/a'},
 'addressmatch': {'desc': 'Address match from geocoder: indicating the resolution that the latitude / longitude represents',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'geocodequality': {'desc': 'Geocode quality (values between 0 and 1 e.g. 80% is entered as 0.8)',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': 'n/a'},
 'geocoder': {'desc': 'Company name / version of geocoder. Free text field.',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'orgoccupancyscheme': {'desc': 'Original occupancy scheme',
  'require_field': 'O',
  'data_type': 'varchar(10)',
  'default_value': 'n/a'},
 'orgoccupancycode': {'desc': 'Original occupancy code',
  'require_field': 'O',
  'data_type': 'varchar(100)',
  'default_value': 'n/a'},
 'orgconstructionscheme': {'desc': 'Original construction scheme',
  'require_field': 'O',
  'data_type': 'varchar(10)',
  'default_value': 'n/a'},
 'orgconstructioncode': {'desc': 'Original construction code',
  'require_field': 'O',
  'data_type': 'varchar(100)',
  'default_value': 'n/a'},
 'occupancycode': {'desc': 'OED occupancy code',
  'require_field': 'O',
  'data_type': 'int',
  'default_value': '1000'},
 'constructioncode': {'desc': 'OED construction code',
  'require_field': 'O',
  'data_type': 'int',
  'default_value': '5000'},
 'yearbuilt': {'desc': 'Year built (4 digit year)',
  'require_field': 'O',
  'data_type': 'smallint',
  'default_value': '0'},
 'numberofstoreys': {'desc': 'Number of storeys',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'numberofbuildings': {'desc': 'Number of buildings',
  'require_field': 'O',
  'data_type': 'int',
  'default_value': '1'},
 'floorarea': {'desc': 'Floor area: the total area across all floors',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'floorareaunit': {'desc': 'Units in which FloorArea is specified',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '11'},
 'locuserdef1': {'desc': 'Location user defined field 1',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'locuserdef2': {'desc': 'Location user defined field 2',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'locuserdef3': {'desc': 'Location user defined field 3',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'locuserdef4': {'desc': 'Location user defined field 4',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'locuserdef5': {'desc': 'Location user defined field 5',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'flexiloczzz': {'desc': 'Flexible field that is stored in FlexiLoc table in ModifierName = ZZZ',
  'require_field': 'O',
  'data_type': 'varchar(40)',
  'default_value': 'n/a'},
 'locperilscovered': {'desc': 'Location perils covered',
  'require_field': 'R',
  'data_type': 'varchar(250)',
  'default_value': 'n/a'},
 'buildingtiv': {'desc': 'Building Total Insured Value',
  'require_field': 'R',
  'data_type': 'float',
  'default_value': 'n/a'},
 'othertiv': {'desc': 'Other Building Insured Value (primarily aimed at specific US policies)',
  'require_field': 'R',
  'data_type': 'float',
  'default_value': 'n/a'},
 'contentstiv': {'desc': 'Contents Total Insured Value',
  'require_field': 'R',
  'data_type': 'float',
  'default_value': 'n/a'},
 'bitiv': {'desc': 'Business Interruption (BI) Total Insured Value',
  'require_field': 'R',
  'data_type': 'float',
  'default_value': 'n/a'},
 'bipoi': {'desc': 'BI period of indemnity (in days, in increments of 0.5 days).',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '365'},
 'loccurrency': {'desc': 'Location currency',
  'require_field': 'R',
  'data_type': 'char(3)',
  'default_value': 'n/a'},
 'locgrosspremium': {'desc': 'Gross premium amount at location level',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'loctax': {'desc': 'Insurance tax amount at location level',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'locbrokerage': {'desc': 'Brokerage amount at location level',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'locnetpremium': {'desc': 'Net premium at location level',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'noncatgrounduploss': {'desc': 'Ground-Up non-cat loss value prior to the application of non-cat policy terms',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'locparticipation': {'desc': 'Percentage of risk that the insurer covers for this location.',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '1'},
 'payoutbasis': {'desc': 'Pay-out basis for the claim (whether depreciation is taken into account).',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'reinstag': {'desc': 'User defined reinsurance tag to provide a further option for specifying reinsurance scope',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'condnumber': {'desc': 'Condition Number to be able to link to relevant special condition',
  'require_field': 'CR',
  'data_type': 'int',
  'default_value': 'n/a'},
 'condpriority': {'desc': 'Condition priority: specifies the order in which special conditions apply',
  'require_field': 'CR',
  'data_type': 'int',
  'default_value': 'n/a'},
 'locdedcode1building': {'desc': 'Location building deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'locdedtype1building': {'desc': 'Location building deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'locded1building': {'desc': 'Location building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'locminded1building': {'desc': 'Location minimum building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'locmaxded1building': {'desc': 'Location maximum building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'locdedcode2other': {'desc': 'Location other building deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'locdedtype2other': {'desc': 'Location other building deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'locded2other': {'desc': 'Location other building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'locminded2other': {'desc': 'Location minimum other building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'locmaxded2other': {'desc': 'Location maximum other building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'locdedcode3contents': {'desc': 'Location contents deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'locdedtype3contents': {'desc': 'Location contents deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'locded3contents': {'desc': 'Location contents deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'locminded3contents': {'desc': 'Location minimum contents deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'locmaxded3contents': {'desc': 'Location maximum contents deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'locdedcode4bi': {'desc': 'Location BI Deductible Code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'locdedtype4bi': {'desc': 'Location BI Deductible Type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'locded4bi': {'desc': 'Location BI deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'locminded4bi': {'desc': 'Location minimum bi deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'locmaxded4bi': {'desc': 'Location maximum bi deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'locdedcode5pd': {'desc': 'Location PD deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'locdedtype5pd': {'desc': 'Location PD deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'locded5pd': {'desc': 'Location PD deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'locminded5pd': {'desc': 'Location minimum PD deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'locmaxded5pd': {'desc': 'Location maximum PD deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'locdedcode6all': {'desc': 'Location blanket deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'locdedtype6all': {'desc': 'Location blanket deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'locded6all': {'desc': 'Location site deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'locminded6all': {'desc': 'Location minimum blanket deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'locmaxded6all': {'desc': 'Location maximum blanket deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'loclimitcode1building': {'desc': 'Location building limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'loclimittype1building': {'desc': 'Location building limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'loclimit1building': {'desc': 'Location building limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'loclimitcode2other': {'desc': 'Location other building limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'loclimittype2other': {'desc': 'Location other building limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'loclimit2other': {'desc': 'Location other building limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'loclimitcode3contents': {'desc': 'Location contents limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'loclimittype3contents': {'desc': 'Location contents limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'loclimit3contents': {'desc': 'Location contents limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'loclimitcode4bi': {'desc': 'Location BI limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'loclimittype4bi': {'desc': 'Location BI limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'loclimit4bi': {'desc': 'Location BI limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'loclimitcode5pd': {'desc': 'Location PD limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'loclimittype5pd': {'desc': 'Location PD limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'loclimit5pd': {'desc': 'Location PD limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'loclimitcode6all': {'desc': 'Location site limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'loclimittype6all': {'desc': 'Location site limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'loclimit6all': {'desc': 'Location site limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'biwaitingperiod': {'desc': 'BI waiting period (in days)',
  'require_field': 'O',
  'data_type': 'smallint',
  'default_value': '0'},
 'locperil': {'desc': 'Perils for location financial terms',
  'require_field': 'CR',
  'data_type': 'varchar(250)',
  'default_value': 'n/a'},
 'yearupgraded': {'desc': 'Year the building was upgraded (4 digit year)',
  'require_field': 'O',
  'data_type': 'smallint',
  'default_value': '0'},
 'surgeleakage': {'desc': 'Storm leakage percentage (0% to 100%) for Wind only policies',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '-999'},
 'sprinklertype': {'desc': 'Sprinkler type',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'percentsprinklered': {'desc': 'Percent sprinklered.',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '-999'},
 'roofcover': {'desc': 'Code that represents the material used to cover the roof',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'roofyearbuilt': {'desc': 'Year the roof was last replaced',
  'require_field': 'O',
  'data_type': 'smallint',
  'default_value': '0'},
 'roofgeometry': {'desc': 'Code that represents the shape of the roof',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'roofequipment': {'desc': 'captures if mechanical or electric equipment is braced on the roof',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'roofframe': {'desc': 'Roof framing material',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'roofmaintenance': {'desc': 'Captures the impact roof maintenance has on the losses',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'buildingcondition': {'desc': 'Building condition',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'roofattachedstructures': {'desc': 'Code that identifies items mounted on the roof',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'roofdeck': {'desc': 'Code that represents the materials used to construct the roof deck',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'roofpitch': {'desc': 'Code that represents the slope of the roof',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'roofanchorage': {'desc': 'Code that represents the connections used to secure the roof support system to the walls',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'roofdeckattachment': {'desc': 'Code that represents the connections used to secure the roof deck to the underlying roof support system',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'roofcoverattachment': {'desc': 'Code that represents the connections used to secure the roof covering to the roof deck',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'glasstype': {'desc': 'Code that represents the type of glass used in the building',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'latticetype': {'desc': 'Code that represents the type of web used for H-shaped steel',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'floodzone': {'desc': 'Flood zone. Free text field.',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'softstory': {'desc': 'Code that indicates if there is structural weakness at any floor.',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'basement': {'desc': 'Code that defines if there is a basement and if so whether it is finished or unfinished',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'basementlevelcount': {'desc': 'Indicates the number of basement levels in a structure (supports up to 5 levels; for more than 5, enter 5).',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'windowprotection': {'desc': 'Code that represents the wind protection systems used on the windows',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'foundationtype': {'desc': "Code that represents the construction type of the building's foundation",
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'wallattachedstructure': {'desc': ' \nCode that represents a structure that is physically attached to the building, such as garage or balcony',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'appurtenantstructure': {'desc': ' \nCode for the appurtenant building, such as shed or detached garage',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'constructionquality': {'desc': 'Construction quality',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'groundequipment': {'desc': 'Captures whether mechanical or electrical equipment are present on the ground level of a building and impact it has on losses',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'equipmentbracing': {'desc': 'Identifies where mechanical or electrical equipment is held in place by bracing',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'flashing': {'desc': 'Refers to the impact the quality of the flashing or coping on a roof has on losses',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'buildingshape': {'desc': 'Code that represents the shape of the building',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'shapeirregularity': {'desc': 'Identifies vertical irregularities, overhangs and setbacks in the building design',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'pounding': {'desc': 'Code that represents the distance to the closest structure',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'ornamentation': {'desc': 'Code that represents the amount of decorative elements attached to the exterior of a building',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'specialeqconstruction': {'desc': 'Presence of a seismic base isolation system',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'retrofit': {'desc': 'Presence of retro fit connectivity between walls and floor for retro fit buildings',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'cripplewall': {'desc': 'Presence of cripple walls on the first floor or frame buildings',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'foundationconnection': {'desc': 'Connection of frame to foundation with or without bolts',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'shortcolumn': {'desc': 'Code that indicates if there are short columns in the building',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'fatigue': {'desc': 'Captures signs of damage from prior earthquakes',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'cladding': {'desc': 'The presence and material of exterior building cladding',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'bipreparedness': {'desc': 'BI preparedness',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'biredundancy': {'desc': 'BI redundancy',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'firstfloorheight': {'desc': 'Height of the lowest floor (above ground) of the building with respect to local ground elevation',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '-999'},
 'firstfloorheightunit': {'desc': 'Code for the unit of measure used to express FirstFloorHeight',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '1'},
 'datum': {'desc': 'Datum reference for the elevation fields (e.g. NAVD88; WGS84)',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'groundelevation': {'desc': 'Flood or Windstorm - Elevation of the local ground surface at the building at this location',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '-999'},
 'groundelevationunit': {'desc': 'Code for the unit of measure used to express the GroundElevation',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '1'},
 'tank': {'desc': 'Code that indicates if there are rooftop tanks on the adjoining higher buildings',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'redundancy': {'desc': 'Indicates whether there are multiple lateral load resisting elements, such as frames or shear walls',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'internalpartition': {'desc': 'Interior wall partitions or chimneys made from URM',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'externaldoors': {'desc': 'Wind resistant doors, doors with a certain rating of hurricane protection',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'torsion': {'desc': 'Code that represents the layout of structural elements that can lead to torsional loads',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'mechanicalequipmentside': {'desc': 'Mechanical or electrical equipment at the side',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'contentswindvuln': {'desc': 'Contents relative vulnerability to windstorm or tornado',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'contentsfloodvuln': {'desc': 'Contents relative vulnerability to flood',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'contentsquakevuln': {'desc': 'Contents relative vulnerability to earthquake',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'smalldebris': {'desc': 'Code that identifies whether small debris are present within 200 meters of the structure',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'floorsoccupied': {'desc': 'Number of floors in the building that are occupied',
  'require_field': 'O',
  'data_type': 'varchar(255)',
  'default_value': 'n/a'},
 'flooddefenseheight': {'desc': 'Height of any site specific flood defenses protecting the property with respect to local ground elevation (NOT to datum).',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '-999'},
 'flooddefenseheightunit': {'desc': 'Code for the unit of measure used to express the FloodDefenseHeight',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '1'},
 'flooddebrisresilience': {'desc': 'Shows if building is vulnerable to floating debris',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'basefloodelevation': {'desc': 'Water surface elevation',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '-999'},
 'basefloodelevationunit': {'desc': 'Code for the unit of measure used to express the BaseFloodElevation',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '1'},
 'buildingheight': {'desc': 'Total height of the structure',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '-999'},
 'buildingheightunit': {'desc': 'Units of the BuildingHeight',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '1'},
 'buildingvaluation': {'desc': 'Field for third party valuation data',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'treeexposure': {'desc': 'Secondary modifier coding density of trees adjacent to structure',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'chimney': {'desc': 'Code that indicates if the structure has a chimney and, if so, the height of the chimney',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'buildingtype': {'desc': 'Building type (e.g. detached, terraced, etc)',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'packaging': {'desc': 'Describes the susceptibility of the packaging of a risk to the peril',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'protection': {'desc': 'Describes the level of protection from the specific peril',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'salvageprotection': {'desc': 'The salvage potential of a particular product',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'valuablesstorage': {'desc': 'Where the specie element is stored',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'daysheld': {'desc': 'Number of days cargo is kept at port or the duration of an exhibition',
  'require_field': 'O',
  'data_type': 'smallint',
  'default_value': '365'},
 'brickveneer': {'desc': 'Code that represents the percentage of external walls that consist of brick veneer.',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'femacompliance': {'desc': 'Indicates whether the building is in compliance with the FEMA flood zone requirements in both design and construction',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'customfloodsop': {'desc': 'Standard of flood protection return period; values from 0-10,000',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'customfloodzone': {'desc': 'User-defined flood zone',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'multistoryhall': {'desc': 'Code that indicates if the building has a multi-story hall',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'buildingexterioropening': {'desc': 'Code that represents the percentage of exterior walls that are open',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'serviceequipmentprotection': {'desc': 'Code that indicates whether the service equipment is protected from flood',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'tallonestory': {'desc': 'The height of the taller than usual one-story building',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'terrainroughness': {'desc': 'Terrain conditions around the building.',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': '0'},
 'numberofemployees': {'desc': 'Number of employees',
  'require_field': 'O',
  'data_type': 'int',
  'default_value': 'n/a'},
 'payroll': {'desc': 'Total payroll',
  'require_field': 'O',
  'data_type': 'int',
  'default_value': 'n/a'}}

OED_ACCOUNT_COLS = {
 'portnumber': {'desc': 'Portfolio number',
  'require_field': 'R',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'portname': {'desc': 'Portfolio name',
  'require_field': 'O',
  'data_type': 'varchar(40)',
  'default_value': 'n/a'},
 'portnotes': {'desc': 'Portfolio notes',
  'require_field': 'O',
  'data_type': 'varchar(200)',
  'default_value': 'n/a'},
 'accnumber': {'desc': 'Account number',
  'require_field': 'R',
  'data_type': 'nvarchar(40)',
  'default_value': 'n/a'},
 'accname': {'desc': 'Account name',
  'require_field': 'O',
  'data_type': 'nvarchar(100)',
  'default_value': 'n/a'},
 'accgroup': {'desc': 'Account group',
  'require_field': 'O',
  'data_type': 'varchar(40)',
  'default_value': 'n/a'},
 'accstatus': {'desc': 'Account status',
  'require_field': 'O',
  'data_type': 'char(1)',
  'default_value': 'n/a'},
 'expiringaccnumber': {'desc': 'Expiring account number',
  'require_field': 'O',
  'data_type': 'nvarchar(40)',
  'default_value': 'n/a'},
 'cedantname': {'desc': 'Cedant name (defined at account level)',
  'require_field': 'O',
  'data_type': 'varchar(40)',
  'default_value': 'n/a'},
 'acccurrency': {'desc': 'Account currency',
  'require_field': 'R',
  'data_type': 'char(3)',
  'default_value': 'n/a'},
 'accuserdef1': {'desc': 'Account user defined field 1',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'accuserdef2': {'desc': 'Account user defined field 2',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'accuserdef3': {'desc': 'Account user defined field 3',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'accuserdef4': {'desc': 'Account user defined field 4',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'accuserdef5': {'desc': 'Account user defined field 5',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'flexiacczzz': {'desc': 'Flexible field that is stored in FlexiAcc table in ModifierName = ZZZ',
  'require_field': 'O',
  'data_type': 'varchar(40)',
  'default_value': 'n/a'},
 'accperil': {'desc': 'Perils for account financial terms',
  'require_field': 'CR',
  'data_type': 'varchar(250)',
  'default_value': 'n/a'},
 'accdedcode1building': {'desc': 'Account building deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'accdedtype1building': {'desc': 'Account building deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'accded1building': {'desc': 'Account building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'accminded1building': {'desc': 'Account minimum building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'accmaxded1building': {'desc': 'Account maximum building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'accdedcode2other': {'desc': 'Account other building deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'accdedtype2other': {'desc': 'Account other building deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'accded2other': {'desc': 'Account other building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'accminded2other': {'desc': 'Account minimum other building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'accmaxded2other': {'desc': 'Account maximum other building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'accdedcode3contents': {'desc': 'Account contents deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'accdedtype3contents': {'desc': 'Account contents deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'accded3contents': {'desc': 'Account contents deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'accminded3contents': {'desc': 'Account minimum contents deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'accmaxded3contents': {'desc': 'Account maximum contents deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'accdedcode4bi': {'desc': 'Account BI deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'accdedtype4bi': {'desc': 'Account BI deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'accded4bi': {'desc': 'Account BI deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'accminded4bi': {'desc': 'Account minimum BI deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'accmaxded4bi': {'desc': 'Account maximum BI deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'accdedcode5pd': {'desc': 'Account PD deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'accdedtype5pd': {'desc': 'Account PD deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'accded5pd': {'desc': 'Account PD deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'accminded5pd': {'desc': 'Account minimum PD deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'accmaxded5pd': {'desc': 'Account maximum PD deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'accdedcode6all': {'desc': 'Account blanket deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'accdedtype6all': {'desc': 'Account blanket deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'accded6all': {'desc': 'Account blanket deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'accminded6all': {'desc': 'Account minimum blanket deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'accmaxded6all': {'desc': 'Account maximum blanket deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'acclimitcode1building': {'desc': 'Account building limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'acclimittype1building': {'desc': 'Account building limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'acclimit1building': {'desc': 'Account building limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'acclimitcode2other': {'desc': 'Account other building limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'acclimittype2other': {'desc': 'Account other building limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'acclimit2other': {'desc': 'Account other building limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'acclimitcode3contents': {'desc': 'Account contents limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'acclimittype3contents': {'desc': 'Account contents limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'acclimit3contents': {'desc': 'Account contents limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'acclimitcode4bi': {'desc': 'Account BI limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'acclimittype4bi': {'desc': 'Account BI limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'acclimit4bi': {'desc': 'Account BI limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'acclimitcode5pd': {'desc': 'Account PD limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'acclimittype5pd': {'desc': 'Account PD limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'acclimit5pd': {'desc': 'Account PD limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'acclimitcode6all': {'desc': 'Account blanket limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'acclimittype6all': {'desc': 'Account blanket limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'acclimit6all': {'desc': 'Account blanket limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'polnumber': {'desc': 'Policy layer number',
  'require_field': 'R',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'polstatus': {'desc': 'Policy layer status',
  'require_field': 'O',
  'data_type': 'char(1)',
  'default_value': 'n/a'},
 'polinceptiondate': {'desc': 'Policy inception date - DD/MM/YYYY format',
  'require_field': 'O',
  'data_type': 'smalldatetime',
  'default_value': 'n/a'},
 'polexpirydate': {'desc': 'Policy expiry date - DD/MM/YYYY format',
  'require_field': 'O',
  'data_type': 'smalldatetime',
  'default_value': 'n/a'},
 'producername': {'desc': 'Producer name (defined at policy level)',
  'require_field': 'O',
  'data_type': 'varchar(40)',
  'default_value': 'n/a'},
 'underwriter': {'desc': 'Underwriter name',
  'require_field': 'O',
  'data_type': 'varchar(40)',
  'default_value': 'n/a'},
 'branchname': {'desc': 'Branch name',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'lob': {'desc': 'Line of business (defined at policy level)',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'expiringpolnumber': {'desc': 'Expiring policy number',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'polperilscovered': {'desc': 'Policy perils covered',
  'require_field': 'R',
  'data_type': 'varchar(250)',
  'default_value': 'n/a'},
 'polgrosspremium': {'desc': 'Policy gross premium',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'poltax': {'desc': 'Policy insurance tax amount',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'polbrokerage': {'desc': 'Policy brokerage amount',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'polnetpremium': {'desc': 'Policy net premium',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'layernumber': {'desc': 'Layer number',
  'require_field': 'O',
  'data_type': 'int',
  'default_value': '1'},
 'layerparticipation': {'desc': 'Insurance company share of the policy layer',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '1'},
 'layerlimit': {'desc': 'Policy layer limit',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'layerattachment': {'desc': 'Policy layer attachment point',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'hoursclause': {'desc': 'For perils with an inherent event duration',
  'require_field': 'O',
  'data_type': 'int',
  'default_value': 'n/a'},
 'polperil': {'desc': 'Perils for policy financial terms',
  'require_field': 'CR',
  'data_type': 'varchar(250)',
  'default_value': 'n/a'},
 'poldedcode1building': {'desc': 'Policy building deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'poldedtype1building': {'desc': 'Policy building deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'polded1building': {'desc': 'Policy building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'polminded1building': {'desc': 'Policy minimum building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'polmaxded1building': {'desc': 'Policy maximum building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'poldedcode2other': {'desc': 'Policy other building deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'poldedtype2other': {'desc': 'Policy other building deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'polded2other': {'desc': 'Policy other building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'polminded2other': {'desc': 'Policy minimum other building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'polmaxded2other': {'desc': 'Policy maximum other building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'poldedcode3contents': {'desc': 'Policy contents deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'poldedtype3contents': {'desc': 'Policy contents deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'polded3contents': {'desc': 'Policy contents deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'polminded3contents': {'desc': 'Policy minimum contents deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'polmaxded3contents': {'desc': 'Policy maximum contents deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'poldedcode4bi': {'desc': 'Policy BI deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'poldedtype4bi': {'desc': 'Policy BI deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'polded4bi': {'desc': 'Policy BI deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'polminded4bi': {'desc': 'Policy minimum BI deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'polmaxded4bi': {'desc': 'Policy maximum BI deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'poldedcode5pd': {'desc': 'Policy PD deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'poldedtype5pd': {'desc': 'Policy PD deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'polded5pd': {'desc': 'Policy PD deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'polminded5pd': {'desc': 'Policy minimum PD deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'polmaxded5pd': {'desc': 'Policy maximum PD deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'poldedcode6all': {'desc': 'Policy blanket deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'poldedtype6all': {'desc': 'Policy blanket deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'polded6all': {'desc': 'Policy blanket deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'polminded6all': {'desc': 'Policy minimum blanket deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'polmaxded6all': {'desc': 'Policy maximum blanket deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'pollimitcode1building': {'desc': 'Policy building limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'pollimittype1building': {'desc': 'Policy building limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'pollimit1building': {'desc': 'Policy building limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'pollimitcode2other': {'desc': 'Policy other building limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'pollimittype2other': {'desc': 'Policy other building limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'pollimit2other': {'desc': 'Policy other building limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'pollimitcode3contents': {'desc': 'Policy contents limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'pollimittype3contents': {'desc': 'Policy contents limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'pollimit3contents': {'desc': 'Policy contents limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'pollimitcode4bi': {'desc': 'Policy BI limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'pollimittype4bi': {'desc': 'Policy BI limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'pollimit4bi': {'desc': 'Policy BI limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'pollimitcode5pd': {'desc': 'Policy PD limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'pollimittype5pd': {'desc': 'Policy PD limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'pollimit5pd': {'desc': 'Policy PD limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'pollimitcode6all': {'desc': 'Policy blanket limit code (annual aggregate only)',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'pollimittype6all': {'desc': 'Policy blanket limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'pollimit6all': {'desc': 'Policy blanket limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'stepfunctionname': {'desc': 'Step function name',
  'require_field': 'CR',
  'data_type': 'varchar(30)',
  'default_value': 'n/a'},
 'steptriggertype': {'desc': 'Code that represents how, and for which coverages, pay-outs are triggered.',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': 'n/a'},
 'stepnumber': {'desc': 'Number between 1 and 7 that is used to sort the step function in the correct order.',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': 'n/a'},
 'starttriggerbuilding': {'desc': 'Starting value of the building damage range over which the corresponding pay-out(s) should be made.',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'endtriggerbuilding': {'desc': 'Ending value of the building damage range over which the corresponding pay-out(s) should be made.',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'deductiblebuilding': {'desc': 'Building deductible that can be used',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'payoutbuilding': {'desc': 'Pay-out that covers building gross losses for this step.',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'starttriggercontent': {'desc': 'Starting value of the content damage range over which the corresponding pay-out(s) should be made.',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'endtriggercontent': {'desc': 'Ending value of the content damage range over which the corresponding pay-out(s) should be made.',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'deductiblecontent': {'desc': 'Content deductible that can be used',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'payoutcontent': {'desc': 'Pay-out that covers content gross losses for this step.',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'starttriggerbuildingcontent': {'desc': 'Starting value of the building and content damage range over which the corresponding pay-out(s) should be made.',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'endtriggerbuildingcontent': {'desc': 'Ending value of the building and content damage range over which the corresponding pay-out(s) should be made.',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'deductiblebuildingcontent': {'desc': 'Building and content deductible that can be used',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'payoutbuildingcontent': {'desc': 'Pay-out that covers building and content gross losses for this step.',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'minimumtiv': {'desc': 'Minimum replacement value for which pay-outs to the corresponding damage range will be allowed.',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'scalefactor': {'desc': 'Percentage factor used to scale calculated losses.',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '1'},
 'islimitatdamage': {'desc': 'Indicates whether the pay-out is limited by the actual ground-up loss.',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'poluserdef1': {'desc': 'Policy user defined field',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'poluserdef2': {'desc': 'Policy user defined field',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'poluserdef3': {'desc': 'Policy user defined field',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'poluserdef4': {'desc': 'Policy user defined field',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'poluserdef5': {'desc': 'Policy user defined field',
  'require_field': 'O',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'flexipolzzz': {'desc': 'Flexible field that is stored in FlexiPol table in ModifierName = ZZZ',
  'require_field': 'O',
  'data_type': 'varchar(40)',
  'default_value': 'n/a'},
 'condnumber': {'desc': 'Condition number',
  'require_field': 'CR',
  'data_type': 'int',
  'default_value': 'n/a'},
 'condname': {'desc': 'Condition name, relates to CondNumber.',
  'require_field': 'CR',
  'data_type': 'varchar(40)',
  'default_value': 'n/a'},
 'condperil': {'desc': 'Perils for condition financial terms',
  'require_field': 'CR',
  'data_type': 'varchar(250)',
  'default_value': 'n/a'},
 'conddedcode1building': {'desc': 'Special condition building deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'conddedtype1building': {'desc': 'Special condition building deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'condded1building': {'desc': 'Special condition building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'condminded1building': {'desc': 'Special condition minimum building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'condmaxded1building': {'desc': 'Special condition maximum building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'conddedcode2other': {'desc': 'Special condition other building deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'conddedtype2other': {'desc': 'Special condition other building deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'condded2other': {'desc': 'Special condition other building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'condminded2other': {'desc': 'Special condition minimum other building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'condmaxded2other': {'desc': 'Special condition maximum other building deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'conddedcode3contents': {'desc': 'Special condition contents deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'conddedtype3contents': {'desc': 'Special condition contents deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'condded3contents': {'desc': 'Special condition contents deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'condminded3contents': {'desc': 'Special condition minimum contents deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'condmaxded3contents': {'desc': 'Special condition maximum contents deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'conddedcode4bi': {'desc': 'Special condition BI deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'conddedtype4bi': {'desc': 'Special condition BI deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'condded4bi': {'desc': 'Special condition BI deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'condminded4bi': {'desc': 'Special condition minimum BI deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'condmaxded4bi': {'desc': 'Special condition maximum BI deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'conddedcode5pd': {'desc': 'Special condition PD deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'conddedtype5pd': {'desc': 'Special condition PD deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'condded5pd': {'desc': 'Special condition PD deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'condminded5pd': {'desc': 'Special condition minimum PD deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'condmaxded5pd': {'desc': 'Special condition maximum PD deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'conddedcode6all': {'desc': 'Special condition blanket deductible code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'conddedtype6all': {'desc': 'Special condition blanket deductible type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'condded6all': {'desc': 'Special condition blanket deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'condminded6all': {'desc': 'Special condition minimum blanket deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'condmaxded6all': {'desc': 'Special condition maximum blanket deductible',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'condlimitcode1building': {'desc': 'Special condition building limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'condlimittype1building': {'desc': 'Special condition building limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'condlimit1building': {'desc': 'Special condition building limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'condlimitcode2other': {'desc': 'Special condition other building limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'condlimittype2other': {'desc': 'Special condition other building limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'condlimit2other': {'desc': 'Special condition other building limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'condlimitcode3contents': {'desc': 'Special condition contents limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'condlimittype3contents': {'desc': 'Special condition contents limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'condlimit3contents': {'desc': 'Special condition contents limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'condlimitcode4bi': {'desc': 'Special condition BI limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'condlimittype4bi': {'desc': 'Special condition BI limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'condlimit4bi': {'desc': 'Special condition BI limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'condlimitcode5pd': {'desc': 'Special condition PD limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'condlimittype5pd': {'desc': 'Special condition PD limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'condlimit5pd': {'desc': 'Special condition PD limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'},
 'condlimitcode6all': {'desc': 'Special condition blanket limit code',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'condlimittype6all': {'desc': 'Special condition blanket limit type',
  'require_field': 'CR',
  'data_type': 'tinyint',
  'default_value': '0'},
 'condlimit6all': {'desc': 'Special condition blanket limit',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '0'}}

OED_REINSINFO_COLS = {
 'reinsnumber': {'desc': 'Reinsurance number',
  'require_field': 'R',
  'data_type': 'int',
  'default_value': 'n/a'},
 'reinsname': {'desc': 'Reinsurance name',
  'require_field': 'O',
  'data_type': 'varchar(30)',
  'default_value': 'n/a'},
 'reinslayernumber': {'desc': 'Reinsurance layer for information / ordering purposes',
  'require_field': 'O',
  'data_type': 'int',
  'default_value': 'n/a'},
 'reinsperil': {'desc': 'Perils for reinsurance financial terms',
  'require_field': 'R',
  'data_type': 'varchar(250)',
  'default_value': 'n/a'},
 'reinsinceptiondate': {'desc': 'Reinsurance inception date - DD/MM/YYYY format',
  'require_field': 'O',
  'data_type': 'smalldatetime',
  'default_value': 'n/a'},
 'reinsexpirydate': {'desc': 'Reinsurance expiry date - DD/MM/YYYY format',
  'require_field': 'O',
  'data_type': 'smalldatetime',
  'default_value': 'n/a'},
 'cededpercent': {'desc': 'Reinsurance ceded percentage. Used mainly in surplus treaties. Applies before other reinsurance terms. Values between 0 to 1 (e.g. 12% entered as 0.12)',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '1.0'},
 'risklimit': {'desc': 'Reinsurance per-risk limit',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'riskattachment': {'desc': 'Reinsurance per-risk attachment point',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'occlimit': {'desc': 'Reinsurance occurrence limit',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'occattachment': {'desc': 'Reinsurance per occurrence attachment',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'occfranchiseded': {'desc': 'Reinsurance franchise deductible',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'occreversefranchise': {'desc': 'Reinsurance reverse franchise - a value of loss that, if exceeded, results in no payment being made for this event from the reinsurer to insurer.',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'agglimit': {'desc': 'Maximum amount payable under this treaty during the AggPeriod',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'aggattachment': {'desc': 'The aggregate monetary amount during a given AggPeriod that the resinured retains under this treaty',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'aggperiod': {'desc': 'Aggregate period associated with the aggregate limits and attachments (in days). Default value = 365 (1 year)',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '365'},
 'placedpercent': {'desc': 'Percentage of the limit that has been placed in the reinsurance market. The main percentage used for reinsurance treaties other than surplus. Applies after other reinsurance terms. Values between 0 to 1 (e.g. 12% entered as 0.12)',
  'require_field': 'R',
  'data_type': 'float',
  'default_value': 'n/a'},
 'reinscurrency': {'desc': 'Reinsurance currency',
  'require_field': 'R',
  'data_type': 'char(3)',
  'default_value': 'n/a'},
 'inuringpriority': {'desc': 'Reinsurance inuring priority capturing the order in which reinsurance contracts apply. Treaties with lower number inuring priorities apply first.',
  'require_field': 'R',
  'data_type': 'tinyint',
  'default_value': 'n/a'},
 'reinstype': {'desc': 'Type of reinsurance contract',
  'require_field': 'R',
  'data_type': 'varchar(3)',
  'default_value': 'n/a'},
 'attachmentbasis': {'desc': 'Reinsurance attachment basis',
  'require_field': 'O',
  'data_type': 'char(2)',
  'default_value': "('LO')"},
 'reinstatement': {'desc': 'Number of reinstatements',
  'require_field': 'O',
  'data_type': 'tinyint',
  'default_value': 'n/a'},
 'reinstatementcharge': {'desc': 'Reinstatement charge as %; semi-colon separated if different for each reinstatement (e.g. 1-free, 2-50%, 3-100% should be entered as: 0;0.5;1). If all reinstatements are the same, then just one number is sufficient (e.g. 3 reinstatements at 100% should be entered as 1)',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': 'n/a'},
 'reinspremium': {'desc': 'Reinsurance premium',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'deemedpercentplaced': {'desc': 'Deemed percent placed, used to represent notional contracts or any part of the contract being notional. For fully notional contracts, enter 1 (i.e. 100%). For partially placed contracts, enter any value between 0 and 1. For real contracts, enter 0.',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '0'},
 'reinsfxrate': {'desc': 'Reinsurance exchange rate (as the contractual reinsurance rate can be different from the actual exchange rates used for policies and locations)',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '1'},
 'treatyshare': {'desc': 'The percentage of a treaty that a given reinsurer may write. Values between 0 to 1 (e.g. 12% entered as 0.12).',
  'require_field': 'O',
  'data_type': 'float',
  'default_value': '1'},
 'usereinsdates': {'desc': 'A flag to indicate if reinsurance contract dates or  policy inception / expiry dates are to be considered when calculating losses (Y) or ignored (N).',
  'require_field': 'O',
  'data_type': 'char(1)',
  'default_value': 'N'}}

OED_REINSSCOPE_COLS = {
 'reinsnumber': {'desc': 'Reinsurance number to link with ReinsInfo file',
  'require_field': 'R',
  'data_type': 'int',
  'default_value': 'n/a'},
 'portnumber': {'desc': 'Portfolio number: used for defining treaty scope in the reinsurance scope file',
  'require_field': 'CR',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'accnumber': {'desc': 'Account number:  used for defining treaty scope in the reinsurance scope file',
  'require_field': 'CR',
  'data_type': 'nvarchar(40)',
  'default_value': 'n/a'},
 'polnumber': {'desc': 'Policy number:  used for defining treaty scope in the reinsurance scope file',
  'require_field': 'CR',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'locgroup': {'desc': 'Location group name:  used for defining treaty scope in the reinsurance scope file',
  'require_field': 'CR',
  'data_type': 'nvarchar(20)',
  'default_value': 'n/a'},
 'locnumber': {'desc': 'Location number:  used for defining treaty scope in the reinsurance scope file',
  'require_field': 'CR',
  'data_type': 'nvarchar(20)',
  'default_value': 'n/a'},
 'cedantname': {'desc': 'Cedant name:  used for defining treaty scope in the reinsurance scope file',
  'require_field': 'CR',
  'data_type': 'varchar(40)',
  'default_value': 'n/a'},
 'producername': {'desc': 'Producer name:  used for defining treaty scope in the reinsurance scope file',
  'require_field': 'CR',
  'data_type': 'varchar(40)',
  'default_value': 'n/a'},
 'lob': {'desc': 'Line of business:  used for defining treaty scope in the reinsurance scope file',
  'require_field': 'CR',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'countrycode': {'desc': 'Country code: used for defining treaty scope in the reinsurance scope file',
  'require_field': 'CR',
  'data_type': 'char(2)',
  'default_value': 'n/a'},
 'reinstag': {'desc': 'Reinsurance tag: user defined field to for defining treaty scope in the reinsurance scope file',
  'require_field': 'CR',
  'data_type': 'varchar(20)',
  'default_value': 'n/a'},
 'cededpercent': {'desc': 'Ceded percentage (for 12%, enter 0.12). Within the reinsurance scope file, CededPercent should only be entered for surplus share treaties.',
  'require_field': 'CR',
  'data_type': 'float',
  'default_value': '1.0'},
 'risklevel': {'desc': "Code to indicate the definition of 'risk' for the per-risk terms in this particular treaty (or portion of the treaty)",
  'require_field': 'R',
  'data_type': 'char(3)',
  'default_value': 'n/a'}}
